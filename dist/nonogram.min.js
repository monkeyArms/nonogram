!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Nonogram=t():e.Nonogram=t()}(window,function(){return function(e){var t={};function l(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,l),o.l=!0,o.exports}return l.m=e,l.c=t,l.d=function(e,t,i){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(l.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)l.d(i,o,function(t){return e[t]}.bind(null,o));return i},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="dist/",l(l.s=1)}([function(e,t){},function(e,t,l){l(0),l(2),l(3),l(4),l(5),l(6),l(7),l(8),l(9),l(10),e.exports=l(11)},function(e,t,l){"use strict";l.r(t);var i=l(0),o=l.n(i);o.a.Puzzle=class{constructor(e,t){if(void 0===e||void 0===t)throw"width and height are required constructor parameters.";if(e<=0||t<=0||1===e&&1===t)throw"invalid dimensions: "+e.toString()+" x "+t.toString();this.width="number"==typeof e?e:parseInt(e.toString(),10),this.height="number"==typeof t?t:parseInt(t.toString(),10),this.totalCells=this.width*this.height,this.reset()}reset(){const e=o.a.Utility.getZeroFilledArray;this.creator=null,this.cells=[],this.rowHints=[],this.columnHints=[],this.grid=e(this.height).map(()=>e(this.width))}checkUserSolution(){return this.cells.every(e=>{const t=1===e.userSolution?1:0;return e.solution===t})}getRowCells(e){const t=[];let l,i=e*this.width,o=i+this.width;for(l=i;l<o;l++)t.push(this.cells[l]);return t.length>0&&t}getColumnCells(e){const t=[];let l;for(l=e;l<this.cells.length;l+=this.width)t.push(this.cells[l]);return t.length>0&&t}getCellByIndex(e){const t="number"!=typeof e?parseInt(e,10):e;return!!this.cells[t]&&this.cells[t]}}},function(e,t,l){"use strict";l.r(t);var i=l(0);l.n(i).a.PuzzleCell=class{constructor(e){this.index=-1,this.column=-1,this.row=-1,this.solution=null,this.userSolution=null,this.aiSolution=null,Object.assign(this,e)}}},function(e,t,l){"use strict";l.r(t);var i=l(0);l.n(i).a.PuzzleLine=class{constructor(e){this.type="",this.index=-1,this.length=0,this.minimumSectionLength=0,this.sections=[],this.cells=[],this.solved=!1,Object.assign(this,e)}}},function(e,t,l){"use strict";l.r(t);var i=l(0);l.n(i).a.Utility=class{static removeFromArray(e,t){const l=e.indexOf(t);return-1!==l&&e.splice(l,1),e}static getZeroFilledArray(e){return new Array(e).fill(0)}static cloneArray(e){return e.slice(0)}static getRandomIntBetween(e,t){let l=Math.ceil(e),i=Math.floor(t);return Math.floor(Math.random()*(i-l+1))+l}}},function(e,t,l){"use strict";l.r(t);var i=l(0),o=l.n(i);o.a.Creator=class{createRandom(e,t,l){const i=(new Date).getTime();let n,s,r,a,h,d,u,c,g=!1,m="number"==typeof l&&l>=0&&l<=1;for(this.puzzle=new o.a.Puzzle(e,t),this._reset();!1===g;){for(s=m?l:o.a.Utility.getRandomIntBetween(200,800)/1e3,r=[],a=[],n=0,this._log("Creating random "+this.puzzle.width+"x"+this.puzzle.height+" puzzle with density of "+s+"..."),u=0;u<this.puzzle.totalCells;u++)n+=h=Math.random()<s?1:0,u%this.puzzle.width==0&&u>0&&(r.push(a),a=[]),a.push(h);0!==n?n!==this.puzzle.totalCells?(r.push(a),this.puzzle=o.a.Creator._populatePuzzleFromGrid(this.puzzle,r),(d=new o.a.Solver(this.puzzle)).solve()?(g=!0,c=((new Date).getTime()-i)/1e3,this._log("Puzzle is solvable - solved in "+d.elapsedTime+" seconds"),this._logLine(),this._log("Puzzle generated in "+c+" seconds."),this.creationTime=c,this.solvingTime=d.elapsedTime):this._log("Puzzle cannot be solved.  Trying again..."),this._logLine()):this._log("Generated puzzle has all cells filled.  Trying again..."):this._log("Generated puzzle has no cells filled.  Trying again...")}return this.puzzle.creator=this,this.puzzle}createFromGrid(e){const t=new Date;let l,i,n,s=0,r=0;if(this._reset(),this._log("creating puzzle from grid array."),!e instanceof Array)throw"grid is not an array";return e.forEach((e,t)=>{if(!e instanceof Array)throw"grid is not a multi-dimensional array";if(0===s)s=e.length;else if(e.length!==s)throw"row "+t+" has an invalid length ("+e.length+") - expecting "+s;r++}),this._log("grid is valid"),this._log("populating "+s+"x"+r+" puzzle"),l=new o.a.Puzzle(s,r),this.puzzle=o.a.Creator._populatePuzzleFromGrid(l,e),this.puzzle.creator=this,(i=new o.a.Solver(this.puzzle)).solve()?(this._log("Puzzle is solvable."),this._logLine(),n=((new Date).getTime()-t)/1e3,this._log("Puzzle built and solved in "+n+" seconds."),this._logLine(),this.puzzle):(this._log("Puzzle cannot be solved."),this._logLine(),!1)}createFromHints(e){const t=new Date;let l,i,n,s,r;if(this._reset(),this._log("creating puzzle from hints"),"object"!=typeof e||!e.row||!e.column)throw'parameter passed to createFromHints() must be an object containing "row" and "column" properties';if(!e.row instanceof Array||!e.column instanceof Array)throw"hints.row or hints.column must be an array.";return this._log("found row and column hints"),l=e.column.length,i=e.row.length,(n=new o.a.Puzzle(l,i)).rowHints=e.row,n.columnHints=e.column,n.creator=this,this._log("populating "+l+"x"+i+" puzzle"),n.grid.forEach((e,t)=>{e.forEach((e,l)=>{n.cells.push(new o.a.PuzzleCell({index:t*n.width+l,column:l,row:t}))})}),this.puzzle=n,(s=new o.a.Solver(this.puzzle)).solve()?(this._log("Puzzle is solvable."),this._logLine(),s.puzzle.cells.forEach((e,t)=>{const l=this.puzzle.getCellByIndex(t);l.aiSolution=e.aiSolution,l.solution=e.aiSolution}),r=((new Date).getTime()-t)/1e3,this._log("Puzzle built and solved in "+r+" seconds."),this._logLine(),this.puzzle):(this._log("Puzzle cannot be solved."),this._logLine(),!1)}static _populatePuzzleFromGrid(e,t){let l,i,n,s,r,a,h,d,u,c,g;for(e.reset(),e.grid=t,i=0;i<e.grid.length;i++){for(n=e.grid[i],u=[],e.rowHints[i]=[],s=0;s<n.length;s++)h=r=n[s],d=s>0?e.grid[i][s-1]:0,e.cells.push(new o.a.PuzzleCell({index:i*e.width+s,column:s,row:i,solution:r})),1===h&&0===d?u.push(1):0===h&&1===d?u.push(0):1===h&&1===d&&u[u.length-1]++;for(c=0;c<u.length;c++)(g=u[c])>0&&e.rowHints[i].push(g)}for(s=0;s<e.width;s++){for(e.columnHints[s]=[],l=[],a=s;a<e.totalCells;a+=e.width)n=Math.floor(a/e.width),h=e.grid[n][s],d=n>0?e.grid[n-1][s]:0,1===h&&0===d?l.push(1):0===h&&1===d?l.push(0):1===h&&1===d&&l[l.length-1]++;for(c=0;c<l.length;c++)(g=u[c])>0&&e.columnHints[s].push(g)}return e}_log(e){this.log.push(e)}_logLine(){this.log.push("-----------------------------------")}_reset(){this.log=[],this.creationTime=0,this.solvingTime=0}}},function(e,t,l){"use strict";l.r(t);var i=l(0),o=l.n(i);o.a.Solver=class{constructor(e){this.puzzle=e,this._reset()}solve(){const e=(new Date).getTime();let t,l,i,o,n,s,r,a,h=-1,d=1;for(this.isReset||this._reset(),this.isReset=!1,this._log("Starting solve algorithm","info");this._getProgress()>h&&this._getTotalSolved()<this.puzzle.cells.length;){for(l=(new Date).getTime(),h=this._getProgress(),r=0;r<this.lines.length;r++)(a=this.lines[r]).solved||this.eliminateImpossibleFits(a),a.solved||this.findKnownPositivesAndNegatives(a),a.solved||this.findSectionDefiningChains(a),a.solved||this.findAnchoredSections(a),a.solved||this.findCompletedSections(a),a.solved||this.findCompletedLines(a);n=((i=(new Date).getTime())-l)/1e3,this._log("Pass "+d+" completed in "+n+" seconds :: "+this._getTotalSolved()+"/"+this.puzzle.cells.length+" cells solved","info"),d++}return t=this._getTotalSolved()===this.puzzle.cells.length,s=((o=(new Date).getTime())-e)/1e3,this._log("Solve algorithm finished in "+s+" seconds.","info"),t?this._log("Solution Found.","success"):this._log("Could not find solution.","failure"),this.elapsedTime=s,t}eliminateImpossibleFits(e){let t,l,i,n,s,r,a,h,d,u,c=0,g=e.length-e.minimumSectionLength;if(0===e.sections.length)for(d=0;d<e.cells.length;d++)this._setCellSolution(e.cells[d],0);for(u=0;u<e.length&&0===e.cells[u].aiSolution;u++)c++;for(u=e.length-1;u>=0&&0===e.cells[u].aiSolution;u--)g--;for(s=0;s<e.sections.length;s++){for(l=e.sections[s],n=o.a.Utility.cloneArray(l.possibleStartIndexes),r=0;r<l.possibleStartIndexes.length;r++)for(i=l.possibleStartIndexes[r],a=e.cells[i+l.length],(i<c||i>g)&&(n=o.a.Utility.removeFromArray(n,i)),a&&1===a.aiSolution&&(n=o.a.Utility.removeFromArray(n,i)),h=(h=i+l.length-1)>e.length-1?e.length-1:h,t=i;t<=h;t++)(t>e.length-1||0===e.cells[t].aiSolution)&&(n=o.a.Utility.removeFromArray(n,i));c+=l.length+1,g+=l.length+1,l.possibleStartIndexes=n}}findKnownPositivesAndNegatives(e){const t=o.a.Utility.getZeroFilledArray(e.length);let l,i,n,s,r,a,h,d,u,c,g;for(l=0;l<e.sections.length;l++){for(i=e.sections[l],n=o.a.Utility.getZeroFilledArray(e.length),s=0;s<i.possibleStartIndexes.length;s++)for(h=(a=r=i.possibleStartIndexes[s])+i.length-1,d=a;d<=h;d++)n[d]++,t[d]++;for(u=0;u<n.length;u++)c=n[u],(g=e.cells[u])&&null===g.aiSolution&&c===i.possibleStartIndexes.length&&this._setCellSolution(g,1)}for(u=0;u<t.length;u++)c=t[u],(g=e.cells[u])&&null===g.aiSolution&&0===c&&this._setCellSolution(g,0)}findAnchoredSections(e){let t,l,i,o;if(e.sections.length>0){for(i=e.sections[0],o=e.sections[e.sections.length-1],l=null,t=0;t<e.cells.length&&null!==e.cells[t].aiSolution;t++)if(1===e.cells[t].aiSolution){l=[t,t+i.length-1];break}if(null!==l){for(t=l[0];t<=l[1];t++)e.cells[t]&&this._setCellSolution(e.cells[t],1);e.cells[t]&&this._setCellSolution(e.cells[t],0)}for(l=null,t=e.cells.length-1;t>=0&&null!==e.cells[t].aiSolution;t--)if(1===e.cells[t].aiSolution){l=[t-o.length+1,t];break}if(null!==l){for(t=l[0];t<=l[1];t++)e.cells[t]&&this._setCellSolution(e.cells[t],1);e.cells[l[0]-1]&&this._setCellSolution(e.cells[l[0]-1],0)}}}findSectionDefiningChains(e){let t,l,i,n,s,r,a=[],h=0;for(r=(s=o.a.Utility.cloneArray(e.sections).sort(function(e,t){return e.length>t.length?-1:1}))[0],t=0;t<e.cells.length;t++)1===(l=e.cells[t]).aiSolution&&(1!==h?(i={start:t,length:1},a.push(i)):i.length++),h=l.aiSolution;for(n=0;n<a.length;n++)(i=a[n]).length===r.length&&(e.cells[i.start-1]&&this._setCellSolution(e.cells[i.start-1],0),e.cells[i.start+r.length]&&this._setCellSolution(e.cells[i.start+r.length],0),r.solved=!0)}findCompletedSections(e){let t,l,i,o;for(t=0;t<e.sections.length;t++)(l=e.sections[t]).solved||1!==l.possibleStartIndexes.length||(i=l.possibleStartIndexes[0]-1,o=l.possibleStartIndexes[0]+l.length,e.cells[i]&&null===e.cells[i].aiSolution&&this._setCellSolution(e.cells[i],0),e.cells[o]&&null===e.cells[o].aiSolution&&this._setCellSolution(e.cells[o],0),l.solved=!0)}findCompletedLines(e){let t,l,i,o,n=0,s=0;for(t=0;t<e.sections.length;t++)n+=(l=e.sections[t]).length;for(i=0;i<e.cells.length;i++)s+=1===(o=e.cells[i]).aiSolution;if(n===s)for(i=0;i<e.cells.length;i++)null===(o=e.cells[i]).aiSolution&&this._setCellSolution(o,0)}_reset(){const e=[],t=[];let l,i,n,s,r,a,h,d,u,c;for(this.isReset=!0,this.elapsedTime=0,this.solutionLog=[],this.lines=[],this._log("Resetting variables","info"),i=0;i<this.puzzle.cells.length;i++)this.puzzle.cells[i].aiSolution=null;for(l=0;l<this.puzzle.width;l++)e.push(l);for(l=0;l<this.puzzle.height;l++)t.push(l);for(n=0;n<this.puzzle.rowHints.length;n++)if(s=this.puzzle.rowHints[n],r=this.puzzle.getRowCells(n)){for(a=new o.a.PuzzleLine({type:"row",index:n,length:this.puzzle.width,cells:r}),h=0;h<s.length;h++)d=s[h],a.sections.push({index:h,length:d,possibleStartIndexes:e,knownIndexes:[],solved:!1}),a.minimumSectionLength+=d+1;a.minimumSectionLength--,this.lines.push(a)}for(u=0;u<this.puzzle.columnHints.length;u++){for(c=this.puzzle.columnHints[u],a=new o.a.PuzzleLine({type:"column",index:u,length:this.puzzle.height,cells:this.puzzle.getColumnCells(u)}),h=0;h<c.length;h++)d=c[h],a.sections.push({index:h,length:d,possibleStartIndexes:t,knownIndexes:[],solved:!1}),a.minimumSectionLength+=d+1;a.minimumSectionLength--,this.lines.push(a)}}_setCellSolution(e,t){let l,i,o,n,s,r,a;if(null===e.aiSolution)for(l=0;l<this.lines.length;l++)if(o="row"===(i=this.lines[l]).type&&i.index===e.row,n="column"===i.type&&i.index===e.column,s=0,o||n){for(r=0;r<i.cells.length;r++)(a=i.cells[r]).index===e.index?(a.aiSolution=t,s++):null!==a.aiSolution&&s++;s===i.length&&(i.solved=!0)}}_log(e,t){this.solutionLog.push({html:e,cssClass:t||"info"})}_getTotalSolved(){let e,t=0;for(e=0;e<this.puzzle.cells.length;e++)t+=null!==this.puzzle.cells[e].aiSolution;return t}_getProgress(){let e,t,l,i=0,o=0;for(e=0;e<this.lines.length;e++)for(i+=(t=this.lines[e]).sections.length*("row"===t.type?this.puzzle.width:this.puzzle.height),l=0;l<t.sections.length;l++)o+=t.sections[l].possibleStartIndexes.length;return i-o}}},function(e,t,l){"use strict";l.r(t);var i=l(0),o=l.n(i);o.a.Gui=class{constructor(e){const t=document.querySelector("head"),l=document.createElement("link");this.boardSizes=[{name:"Tiny",handle:"tiny",size:1},{name:"Small",handle:"small",size:2},{name:"Medium",handle:"medium",size:3},{name:"Large",handle:"large",size:4}],this.boardSize=this.boardSizes[2],this.theme=e||"default",this.themePath=this._resolveThemePath()+"/"+this.theme,this.themeStylesheetPath=this.themePath+"/styles.css",l.rel="stylesheet",l.type="text/css",l.href=this.themeStylesheetPath,t.prepend(l),this.templatesLoaded=[],this.themeTemplatesPath=this.themePath+"/templates",this.templates=[new o.a.GuiTemplate("gameControls",this.themeTemplatesPath+"/controls-game.html"),new o.a.GuiTemplate("generateControls",this.themeTemplatesPath+"/controls-generate.html"),new o.a.GuiTemplate("console",this.themeTemplatesPath+"/console.html"),new o.a.GuiTemplate("previewGrid",this.themeTemplatesPath+"/preview-grid.html"),new o.a.GuiTemplate("puzzleGrid",this.themeTemplatesPath+"/puzzle-grid.html")],this.templates.forEach(e=>{this.templatesLoaded.push(e.load())})}draw(e){this.puzzle=e,Promise.all(this.templatesLoaded).then(()=>{this.drawGenerateControls(),this.drawPuzzle(e),this.drawGameControls(),this.drawConsole()})}drawPuzzle(e){Promise.all(this.templatesLoaded).then(()=>{const t=this._getTemplate("puzzleGrid");if(this.puzzle=e,this.gridContainer=document.querySelector("[data-nonogram-puzzle-grid]"),!this.gridContainer)return;const l=this.gridContainer,i=t.getNode(),o=i.querySelector("[data-nonogram-puzzle-grid-table-thead-th]"),n=i.querySelector("[data-nonogram-puzzle-grid-table-row]"),s={tl:0,tr:this.puzzle.width-1,bl:this.puzzle.width*this.puzzle.height-this.puzzle.width,br:this.puzzle.width*this.puzzle.height-1};this.puzzle.columnHints.forEach((e,t)=>{const l=document.importNode(o.content,!0).querySelector("th"),i=l.querySelector(".fill");l.setAttribute("data-column",t.toString()),l.classList.add("hint","top"),e.forEach(e=>{let t=document.createElement("span");t.textContent=e,i.appendChild(t)}),o.parentNode.insertBefore(l,o)}),this.puzzle.grid.forEach((e,t)=>{const l=this.puzzle.getRowCells(t),i=document.importNode(n.content,!0).querySelector("tr"),o=i.querySelector("[data-nonogram-puzzle-grid-table-cell]"),r=i.querySelector("[data-row-hints] .fill");i.setAttribute("data-row",t.toString()),this.puzzle.rowHints[t].forEach(e=>{let t=document.createElement("span");t.textContent=e,r.appendChild(t)}),l.forEach(e=>{const t=document.importNode(o.content,!0).querySelector("td");t.setAttribute("data-index",e.index),t.setAttribute("data-column",e.column),t.setAttribute("data-row",e.row),t.classList.add("puzzle-cell","flippable"),Object.keys(s).forEach(l=>{e.index===s[l]&&t.classList.add(l)}),i.appendChild(t)}),n.parentNode.appendChild(i)}),l.innerHtml=l.textContent="",l.appendChild(i),document.querySelector("[data-nonogram-puzzle-grid-table]").classList.add(this.boardSize.handle),this._resizeBoardForAvailableScreen(),this._makePuzzlePlayable(),this.drawPreview("userSolution")})}drawGameControls(){Promise.all(this.templatesLoaded).then(()=>{const e=this._getTemplate("gameControls"),t=document.querySelector("[data-nonogram-game-controls]"),l=e.getNode();let i;t&&(t.innerHtml=t.textContent="",t.appendChild(l),(i=document.querySelector("#nonogram-puzzle-fill-mode")).addEventListener("change",()=>{const e=document.querySelector('[for="nonogram-puzzle-fill-mode"]'),t=e.querySelector(".active"),l=e.querySelector(".inactive");t.classList.remove("active"),t.classList.add("inactive"),l.classList.remove("inactive"),l.classList.add("active"),i.checked?(e.classList.add("on"),this.playerClickMode=0):(e.classList.remove("on"),this.playerClickMode=1)}),window.addEventListener("keyup",e=>{e.key&&"x"===e.key&&i.dispatchEvent(new MouseEvent("click"))}))})}drawGenerateControls(){Promise.all(this.templatesLoaded).then(()=>{const e=this._getTemplate("generateControls"),t=document.querySelector("[data-nonogram-generate-controls]"),l=e.getNode(),i=l.querySelector("[data-nonogram-generate-width]"),n=l.querySelector("[data-nonogram-generate-height]"),s=l.querySelector("[data-nonogram-generate-width-options]"),r=l.querySelector("[data-nonogram-generate-height-options]"),a=l.querySelector("[data-nonogram-choose-predefined]"),h=l.querySelector("[data-nonogram-board-size]"),d=l.querySelector("[data-nonogram-board-size-options]");let u,c,g,m,p,z,f,S,v,w,y,C,b,_;if(t){for(u=5;u<=30;u++)c=document.importNode(s.content,!0),g=document.importNode(r.content,!0),(m=c.querySelector("option")).textContent=m.value=u,(p=g.querySelector("option")).textContent=p.value=u,this.puzzle.width===u&&m.setAttribute("selected","selected"),this.puzzle.height===u&&p.setAttribute("selected","selected"),i.appendChild(m),n.appendChild(p);Object.keys(o.a.PuzzleLibrary).forEach(e=>{z=document.importNode(s.content,!0),(f=z.querySelector("option")).textContent=f.value=e,e===this.selectedExample&&f.setAttribute("selected","selected"),a.appendChild(f)}),this.boardSizes.forEach(e=>{w=document.importNode(d.content,!0),(y=w.querySelector("option")).value=e.handle,y.textContent=e.name,e.handle===this.boardSize.handle&&y.setAttribute("selected","selected"),h.appendChild(y)}),t.innerHtml=t.textContent="",t.appendChild(l),_=document.querySelector("[data-nonogram-generate-button]"),S=document.querySelector("[data-nonogram-choose-predefined]"),v=document.querySelector("[data-nonogram-board-size]"),C=document.querySelector("[data-nonogram-game-reset]"),b=document.querySelector("[data-nonogram-game-solve]"),_.addEventListener("click",()=>{const e=document.querySelector("[data-nonogram-generate-width]"),t=document.querySelector("[data-nonogram-generate-height]"),l=e.value,i=t.value,n=(new o.a.Creator).createRandom(l,i,null);this.selectedExample=null,this.draw(n),this._resizeBoardForAvailableScreen()}),S.addEventListener("change",()=>{const e=new o.a.Creator;let t,l;""!==S.value&&(Object.keys(o.a.PuzzleLibrary).forEach(i=>{S.value===i&&(t=o.a.PuzzleLibrary[i],this.selectedExample=i,t.solutionGrid?l=e.createFromGrid(t.solutionGrid):t.hints&&(l=e.createFromHints(t.hints)))}),l&&(this.draw(l),this._resizeBoardForAvailableScreen()))}),v.addEventListener("change",()=>{this.boardSizes.forEach(e=>{e.handle===v.value&&this._changeBoardSize(e)})}),C.addEventListener("click",()=>{this._resetPuzzle()}),b.addEventListener("click",()=>{this.drawSolution(),this.drawPreview("solution"),this._showPuzzleSolved()})}})}drawConsole(){Promise.all(this.templatesLoaded).then(()=>{const e=this._getTemplate("console"),t=document.querySelector("[data-nonogram-console]"),l=e.getNode(),i=l.querySelector("[data-nonogram-console-output]"),n=l.querySelector("[data-nonogram-console-line]");t&&(this.puzzle.creator instanceof o.a.Creator&&this.puzzle.creator.log.forEach(e=>{const t=document.importNode(n.content,!0).querySelector("code");t.textContent=e.toString(),i.appendChild(t)}),t.innerHtml=t.textContent="",t.appendChild(l))})}drawPreview(e){Promise.all(this.templatesLoaded).then(()=>{const t=this._getTemplate("previewGrid"),l=document.querySelector("[data-nonogram-preview-grid]"),i=t.getNode();l.innerHtml=l.textContent="",l.appendChild(i.querySelector("[data-nonogram-preview]"));const o=document.querySelector("[data-nonogram-preview-canvas]"),n=o.getContext("2d"),s=o.parentElement.parentElement.parentElement,r=s.offsetWidth,a=s.offsetHeight,h=r/a,d=this.puzzle.width/this.puzzle.height;let u;u=h>d?Math.floor(a/this.puzzle.height):Math.floor(r/this.puzzle.width),o.width=u*this.puzzle.width,o.height=u*this.puzzle.height,this.puzzle.cells.forEach(t=>{1===t[e]&&n.fillRect(t.column*u,t.row*u,u,u)})})}drawSolution(){Promise.all(this.templatesLoaded).then(()=>{this.gridContainer.querySelectorAll("td.filled").forEach(e=>{e.classList.remove("filled","solution-positive","solution-negative","user-positive","user-negative","flipped")}),this.puzzle.cells.forEach(e=>{const t=this.gridContainer.querySelector('td[data-index="'+e.index+'"]');e.userSolution=e.solution,t.classList.add("user-solved"),1===e.solution?t.classList.add("solution-positive","user-positive","flipped"):t.classList.add("solution-negative","user-negative")})})}_changeBoardSize(e){const t=document.querySelector("[data-nonogram-puzzle-grid-table]"),l=document.querySelector("[data-nonogram-board-size]");t&&l&&(t.classList.remove("tiny","small","medium","large"),t.classList.add(e.handle),l.value=e.handle,this.boardSize=e,this.drawPreview())}_resizeBoardForAvailableScreen(){const e=this.gridContainer.querySelector(".nonogram-puzzle-grid"),t=this.gridContainer.clientWidth,l=this.boardSizes.sort((e,t)=>e.size>t.size?-1:1);let i;if(e.clientWidth>t)for(i=0;i<l.length&&(l[i].size<this.boardSize.size&&this._changeBoardSize(l[i]),this.puzzle.creator,!(e.clientWidth<=t));i++);this.drawConsole()}_makePuzzlePlayable(){const e=this.gridContainer.querySelector(".nonogram-puzzle-grid"),t=this.gridContainer.querySelectorAll(".nonogram-puzzle-grid td.puzzle-cell"),l=this.gridContainer.querySelectorAll(".nonogram-puzzle-grid td");this.playerClickMode=1,t.forEach(t=>{t.classList.add("playable"),t.addEventListener("mouseenter",e=>{const t=e.currentTarget,i=t.getAttribute("data-row"),o=t.getAttribute("data-column");l.forEach(e=>{e.getAttribute("data-row")===i||e.getAttribute("data-column")===o?e.classList.add("row-column-highlight"):e.classList.remove("row-column-highlight")})}),t.addEventListener("click",t=>{const l=t.currentTarget,i=l.getAttribute("data-index"),o=this.puzzle.getCellByIndex(i),n=document.querySelector("[data-nonogram-puzzle-grid-solved]");t.preventDefault(),o.userSolution=o.userSolution===this.playerClickMode?null:this.playerClickMode,e.classList.remove("solved"),l.classList.remove("user-solved","user-positive","user-negative","solution-positive","solution-negative"),1===o.userSolution?l.classList.add("user-solved","user-positive"):0===o.userSolution&&l.classList.add("user-solved","user-negative"),l.classList.toggle("flipped"),this.drawPreview("userSolution"),this.puzzle.checkUserSolution()?this._showPuzzleSolved():n.textContent=""})}),e.addEventListener("mouseleave",()=>{l.forEach(e=>{e.classList.remove("row-column-highlight")})})}_resetPuzzle(){const e=this.gridContainer.querySelectorAll(".nonogram-puzzle-grid td.puzzle-cell"),t=this.gridContainer.querySelector(".nonogram-puzzle-grid"),l=document.querySelector("[data-nonogram-puzzle-grid-solved]");t.classList.remove("solved"),l.textContent="",this.puzzle.cells.forEach(e=>{e.userSolution=null}),e.forEach(e=>{e.classList.remove("user-solved","user-positive","user-negative","solution-positive","solution-negative")}),this.gridContainer.querySelector("[data-nonogram-preview-grid]").innerHTML="",this.drawPreview("userSolution")}_showPuzzleSolved(){const e=this.gridContainer.querySelector(".nonogram-puzzle-grid"),t=document.querySelectorAll("[data-nonogram-puzzle-grid-table] .puzzle-cell"),l=document.querySelector("[data-nonogram-puzzle-grid-solved]");t.forEach(e=>{e.classList.remove("row-column-highlight")}),e.classList.add("solved"),l.textContent="Solved!"}_getTemplate(e){const t=this.templates.find(t=>t.name===e);if(!t instanceof o.a.GuiTemplate)throw'"'+e+'" template not found.';return t}_resolveThemePath(){let e="";return document.querySelectorAll("script").forEach(t=>{try{const l=new URL(t.src),i=l.pathname.split("/").pop();"nonogram.min.js"===i&&(e=l.href.replace(i,"")+"themes")}catch(e){}}),e}}},function(e,t,l){"use strict";l.r(t);var i=l(0);l.n(i).a.GuiTemplate=class{constructor(e,t){this.name=e,this.path=t,this.html="",this.onLoadedCallbacks=[],this.isLoaded=!1,this.loadedPromise=null}onLoad(e){this.onLoadedCallbacks.push(e)}fireOnLoaded(){this.onLoadedCallbacks.forEach(e=>{e()})}load(){return this.loadedPromise=new Promise(e=>{fetch(this.path).then(t=>{if(!t.ok)throw'loading failed for "'+this.path+'"';t.text().then(t=>{this.html=t,this.isLoaded=!0,this.fireOnLoaded(),e(this.name+" onLoad and parsed")})})}),this.loadedPromise}getNode(){const e=document.createElement("div");return e.innerHTML=this.html,e}}},function(e,t,l){"use strict";l.r(t);var i=l(0);l.n(i).a.PuzzleLibrary={"Small Example 1":{width:8,height:8,solutionGrid:[[0,0,0,0,1,1,1,0],[0,0,0,1,1,1,1,1],[0,0,0,1,1,1,1,1],[1,1,0,0,1,1,1,0],[0,1,0,1,1,1,1,1],[1,1,0,1,0,0,0,1],[1,1,0,1,1,1,1,1],[1,0,0,0,1,1,1,0]]},"Small Example 2":{width:8,height:8,hints:{row:[[3],[5],[5],[2,3],[1,5],[2,1,1],[2,5],[1,3]],column:[[1,3],[4],[],[2,3],[5,2],[5,2],[5,2],[2,3]]}},"Small Example 3":{width:10,height:10,hints:{column:[[3],[1,1],[1],[6],[8],[2,1],[4,1],[10],[3,1],[3]],row:[[4],[5],[2,3],[2,3],[2,1],[2,1],[2,1],[10],[1,1,1],[2,1,1]]}},"Medium Example 1":{width:16,height:18,hints:{column:[[5],[4,3,3],[7,6,2],[4,3,4,1],[3,2,4,1,2],[2,6,4],[3,3,1,1],[4,6,4],[6,4,1,1],[4,3,4,1],[7,6,2],[4,3,3],[5],[3],[5,3,3],[2,4,1,2]],row:[[5],[9],[3,5],[3,5,1],[4,4,2],[2,1,1,2,1],[2,2,1],[2,3,2,1],[7,2],[9,1],[2,2,2,2,2],[3,2,2,3,2],[4,1,1,6],[1,2,2,2],[16],[2,1,1,1,1,2,1],[2,2,2,2,2],[9,1]]}},"Medium Example 2":{width:15,height:15,hints:{column:[[4],[3,1],[2,3],[1,2,2],[1,2,1],[1,1,1,1],[4,3,3],[2,2,4,3],[1,2,5,1],[1,2,4,1],[1,2,5,1],[2,2,4,3],[9,3],[5,1,1],[6,1]],row:[[4,5],[3,2,2],[2,1,1],[1,4,3],[2,9],[2,8],[2,3],[12],[1,7,1],[9],[5],[1,1],[2,2],[3,3],[1,7,1]]}},"Large Example 1":{width:30,height:30,hints:{column:[[19,9],[13,1,2,1,5],[11,4,1,1,2,3],[10,6,1,4,1,1],[9,7,1,1,3,2],[3,4,11,1,6],[2,1,2,3,3,3,7],[2,2,1,2,4,3,8],[3,2,2,1,2,6,7],[1,3,3,4,1,4,4,1],[5,4,2,5,2,2],[1,3,11,1,2,4],[3,2,14,5],[2,2,1,14,7],[1,2,2,2,10,2],[2,1,3,2,6,3,3],[5,6,6,2,2,4],[6,4,4,3,3,3],[6,3,2,1,1,3,5,2],[6,1,2,2,2,2,2,3],[7,1,9,2,4],[7,3,1,2,2,3],[8,2,5,4,3],[6,1,7,11],[5,1,3,2,12],[5,2,2,2,3,11],[4,5,4,3,10],[3,14,10],[3,3,5,2,9],[4,3,3,10]],row:[[10,19],[9,1,2,15],[6,1,1,1,14],[5,2,3,2,11,1],[6,7,11,1],[7,5,7,3],[8,4,3,4],[6,4,5,1,4,1],[5,8,6,2,1],[4,10,3,3,3,1],[3,3,5,2,4,2,2],[2,3,3,3,2,4,2,3],[2,3,1,1,5,2,1,6],[1,4,3,4,2,2,2,4],[1,4,3,4,5,3,3],[1,5,5,2,1,4,1,1],[1,15,3,2,3,1],[2,4,7,2,2,3,1],[1,4,4,7,2,1,3],[1,2,3,4,3,3,1],[1,1,3,5,2,6,1],[1,1,1,4,4,9],[2,3,1,1,1,9],[1,2,4,1,1,6,8],[1,10,1,7,7],[2,8,2,1,2,1,7],[3,6,3,1,1,1,7],[4,4,4,3,11],[3,5,20],[2,7,19]]}}}},function(e,t,l){"use strict";l.r(t);var i=l(0),o=l.n(i);t.default=o.a}]).default});
//# sourceMappingURL=nonogram.js.map