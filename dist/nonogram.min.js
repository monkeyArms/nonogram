!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Nonogram=t():e.Nonogram=t()}(window,function(){return function(e){var t={};function o(l){if(t[l])return t[l].exports;var n=t[l]={i:l,l:!1,exports:{}};return e[l].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,l){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(o.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(l,n,function(t){return e[t]}.bind(null,n));return l},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="dist/",o(o.s=1)}([function(e,t){},function(e,t,o){o(0),o(2),o(3),o(4),o(5),o(6),o(7),o(8),o(9),o(10),e.exports=o(11)},function(e,t,o){"use strict";o.r(t);var l=o(0),n=o.n(l);n.a.Puzzle=class{constructor(e,t){if(void 0===e||void 0===t)throw"width and height are required constructor parameters.";if(e<=0||t<=0||1===e&&1===t)throw"invalid dimensions: "+e.toString()+" x "+t.toString();this.width="number"==typeof e?e:parseInt(e.toString(),10),this.height="number"==typeof t?t:parseInt(t.toString(),10),this.totalCells=this.width*this.height,this.reset()}reset(){const e=n.a.Utility.getZeroFilledArray;this.creator=null,this.cells=[],this.rowHints=[],this.columnHints=[],this.grid=e(this.height).map(()=>e(this.width))}checkUserSolution(){return this.cells.every(e=>{const t=1===e.userSolution?1:0;return e.solution===t})}getRowCells(e){const t=[];return this.cells.forEach(o=>{o.row===e&&t.push(o)}),t.length>0&&t}getColumnCells(e){const t=[];return this.cells.forEach(o=>{o.column===e&&t.push(o)}),t.length>0&&t}getCellByIndex(e){const t="number"!=typeof e?parseInt(e,10):e;return!!this.cells[t]&&this.cells[t]}}},function(e,t,o){"use strict";o.r(t);var l=o(0);o.n(l).a.PuzzleCell=class{constructor(e){this.index=null,this.column=null,this.row=null,this.solution=null,this.userSolution=null,this.aiSolution=null,Object.assign(this,e)}}},function(e,t,o){"use strict";o.r(t);var l=o(0);o.n(l).a.PuzzleLine=class{constructor(e){this.type=null,this.index=null,this.length=null,this.minimumSectionLength=0,this.sections=[],this.cells=[],this.solved=!1,Object.assign(this,e)}}},function(e,t,o){"use strict";o.r(t);var l=o(0);o.n(l).a.Utility=class{static removeFromArray(e,t){const o=e.indexOf(t);return-1!==o&&e.splice(o,1),e}static getZeroFilledArray(e){return new Array(e).fill(0)}static cloneArray(e){return e.slice(0)}static getRandomIntBetween(e,t){let o=Math.ceil(e),l=Math.floor(t);return Math.floor(Math.random()*(l-o+1))+o}}},function(e,t,o){"use strict";o.r(t);var l=o(0),n=o.n(l);n.a.Creator=class{constructor(){this.log=[]}createRandom(e,t,o){const l=(new Date).getTime();let i,s,r,a,u,c,d,h,g=!1,p="number"==typeof o&&o>=0&&o<=1;for(this.puzzle=new n.a.Puzzle(e,t),this.log=[];!1===g;){for(s=p?o:n.a.Utility.getRandomIntBetween(200,800)/1e3,r=[],a=[],i=0,this.log.push("Creating random "+this.puzzle.width+"x"+this.puzzle.height+" puzzle with density of "+s+"..."),d=0;d<this.puzzle.totalCells;d++)i+=u=Math.random()<s?1:0,d%this.puzzle.width==0&&d>0&&(r.push(a),a=[]),a.push(u);0!==i?i!==this.puzzle.totalCells?(r.push(a),this.puzzle=n.a.Creator._populatePuzzleFromGrid(this.puzzle,r),(c=new n.a.Solver(this.puzzle)).solve()?(g=!0,h=((new Date).getTime()-l)/1e3,this.log.push("Puzzle is solvable."),this.log.push("-----------------------------------"),this.log.push("Puzzle generated in "+h+" seconds.")):this.log.push("Puzzle cannot be solved.  Trying again..."),this.log.push("-----------------------------------")):this.log.push("Generated puzzle has all cells filled.  Trying again..."):this.log.push("Generated puzzle has no cells filled.  Trying again...")}return this.puzzle.creator=this,this.puzzle}createFromGrid(e){const t=new Date;let o,l,i,s=0,r=0;if(this.log=[],this.log.push("creating puzzle from grid array."),!e instanceof Array)throw"grid is not an array";return e.forEach((e,t)=>{if(!e instanceof Array)throw"grid is not a multi-dimensional array";if(0===s)s=e.length;else if(e.length!==s)throw"row "+t+" has an invalid length ("+e.length+") - expecting "+s;r++}),this.log.push("grid is valid"),this.log.push("populating "+s+"x"+r+" puzzle"),o=new n.a.Puzzle(s,r),this.puzzle=n.a.Creator._populatePuzzleFromGrid(o,e),this.puzzle.creator=this,(l=new n.a.Solver(this.puzzle)).solve()?(this.log.push("Puzzle is solvable."),this.log.push("-----------------------------------"),i=((new Date).getTime()-t)/1e3,this.log.push("Puzzle built and solved in "+i+" seconds."),this.log.push("-----------------------------------"),this.puzzle):(this.log.push("Puzzle cannot be solved."),this.log.push("-----------------------------------"),!1)}createFromHints(e){const t=this,o=new Date;let l,i,s,r,a;if(t.log=[],t.log.push("creating puzzle from hints"),"object"!=typeof e||!e.row||!e.column)throw'parameter passed to createFromHints() must be an object containing "row" and "column" properties';if(!e.row instanceof Array||!e.column instanceof Array)throw"hints.row or hints.column must be an array.";return t.log.push("found row and column hints"),l=e.column.length,i=e.row.length,(s=new n.a.Puzzle(l,i)).rowHints=e.row,s.columnHints=e.column,s.creator=t,t.log.push("populating "+l+"x"+i+" puzzle"),s.grid.forEach((e,t)=>{e.forEach((e,o)=>{s.cells.push(new n.a.PuzzleCell({index:t*s.width+o,column:o,row:t}))})}),t.puzzle=s,(r=new n.a.Solver(this.puzzle)).solve()?(this.log.push("Puzzle is solvable."),this.log.push("-----------------------------------"),r.puzzle.cells.forEach((e,o)=>{const l=t.puzzle.getCellByIndex(o);l.aiSolution=e.aiSolution,l.solution=e.aiSolution}),a=((new Date).getTime()-o)/1e3,this.log.push("Puzzle built and solved in "+a+" seconds."),this.log.push("-----------------------------------"),t.puzzle):(this.log.push("Puzzle cannot be solved."),this.log.push("-----------------------------------"),!1)}static _populatePuzzleFromGrid(e,t){let o,l,i,s,r,a;for(e.reset(),e.grid=t,e.grid.forEach(function(t,o){t.forEach(function(t,l){e.cells.push(new n.a.PuzzleCell({index:o*e.width+l,column:l,row:o,solution:t}))})}),e.grid.forEach((t,o)=>{let l=[];e.rowHints[o]=[],t.forEach((t,n)=>{const i=t,s=n>0?e.grid[o][n-1]:0;1===i&&0===s?l.push(1):0===i&&1===s?l.push(0):1===i&&1===s&&l[l.length-1]++}),l.forEach(t=>{t>0&&e.rowHints[o].push(t)})}),i=0;i<e.width;i++){for(e.columnHints[i]=[],o=[],s=i;s<e.totalCells;s+=e.width)l=Math.floor(s/e.width),r=e.grid[l][i],a=l>0?e.grid[l-1][i]:0,1===r&&0===a?o.push(1):0===r&&1===a?o.push(0):1===r&&1===a&&o[o.length-1]++;o.forEach(t=>{t>0&&e.columnHints[i].push(t)})}return e}}},function(e,t,o){"use strict";o.r(t);var l=o(0),n=o.n(l);n.a.Solver=class{constructor(e){this.puzzle=e,this._reset()}solve(){const e=this,t=(new Date).getTime();let o,l,n,i,s,r,a=-1,u=1;for(e.isReset||e._reset(),e.isReset=!1,e.log("Starting solve algorithm","info");e.getProgress()>a&&e.getTotalSolved()<e.puzzle.cells.length;)l=(new Date).getTime(),a=e.getProgress(),e.lines.forEach(t=>{t.solved||(e.eliminateImpossibleFits(t),e.findKnownPositivesAndNegatives(t),e.findSectionDefiningChains(t),e.findAnchoredSections(t),e.findCompletedSections(t),e.findCompletedLines(t))}),s=((n=(new Date).getTime())-l)/1e3,e.log("Pass "+u+" completed in "+s+" seconds :: "+e.getTotalSolved()+"/"+e.puzzle.cells.length+" cells solved","info"),u++;return o=e.getTotalSolved()===e.puzzle.cells.length,r=((i=(new Date).getTime())-t)/1e3,e.log("Solve algorithm finished in "+r+" seconds.","info"),o?e.log("Solution Found.","success"):e.log("Could not find solution.","failure"),o}eliminateImpossibleFits(e){const t=this;let o,l=0,i=e.length-e.minimumSectionLength;for(0===e.sections.length&&e.cells.forEach(e=>{t.setCellSolution(e,0)}),o=0;o<e.length&&0===e.cells[o].aiSolution;o++)l++;for(o=e.length-1;o>=0&&0===e.cells[o].aiSolution;o--)i--;e.sections.forEach(t=>{let s=n.a.Utility.cloneArray(t.possibleStartIndexes);t.possibleStartIndexes.forEach(r=>{const a=e.cells[r+t.length];let u;for((r<l||r>i)&&(s=n.a.Utility.removeFromArray(s,r)),a&&1===a.aiSolution&&(s=n.a.Utility.removeFromArray(s,r)),u=(u=r+t.length-1)>e.length-1?e.length-1:u,o=r;o<=u;o++)(o>e.length-1||0===e.cells[o].aiSolution)&&(s=n.a.Utility.removeFromArray(s,r))}),l+=t.length+1,i+=t.length+1,t.possibleStartIndexes=s})}findKnownPositivesAndNegatives(e){const t=n.a.Utility.getZeroFilledArray(e.length);e.sections.forEach(o=>{const l=n.a.Utility.getZeroFilledArray(e.length);o.possibleStartIndexes.forEach(e=>{const n=e,i=n+o.length-1;let s;for(s=n;s<=i;s++)l[s]++,t[s]++}),l.forEach((t,l)=>{const n=e.cells[l];n&&null===n.aiSolution&&t===o.possibleStartIndexes.length&&this.setCellSolution(n,1)})}),t.forEach((t,o)=>{const l=e.cells[o];l&&null===l.aiSolution&&0===t&&this.setCellSolution(l,0)})}findAnchoredSections(e){let t,o,l,n;if(e.sections.length>0){for(l=e.sections[0],n=e.sections[e.sections.length-1],o=null,t=0;t<e.cells.length&&null!==e.cells[t].aiSolution;t++)if(1===e.cells[t].aiSolution){o=[t,t+l.length-1];break}if(null!==o){for(t=o[0];t<=o[1];t++)e.cells[t]&&this.setCellSolution(e.cells[t],1);e.cells[t]&&this.setCellSolution(e.cells[t],0)}for(o=null,t=e.cells.length-1;t>=0&&null!==e.cells[t].aiSolution;t--)if(1===e.cells[t].aiSolution){o=[t-n.length+1,t];break}if(null!==o){for(t=o[0];t<=o[1];t++)e.cells[t]&&this.setCellSolution(e.cells[t],1);e.cells[o[0]-1]&&this.setCellSolution(e.cells[o[0]-1],0)}}}findSectionDefiningChains(e){const t=this;let o,l,i,s=[],r=0;l=n.a.Utility.cloneArray(e.sections).sort(function(e,t){return e.length>t.length?-1:1}),i=l[0],e.cells.forEach((e,t)=>{1===e.aiSolution&&(1!==r?(o={start:t,length:1},s.push(o)):o.length++),r=e.aiSolution}),s.forEach(o=>{o.length===i.length&&(e.cells[o.start-1]&&t.setCellSolution(e.cells[o.start-1],0),e.cells[o.start+i.length]&&t.setCellSolution(e.cells[o.start+i.length],0),i.solved=!0)})}findCompletedSections(e){e.sections.forEach(t=>{let o,l;t.solved||1!==t.possibleStartIndexes.length||(o=t.possibleStartIndexes[0]-1,l=t.possibleStartIndexes[0]+t.length,e.cells[o]&&null===e.cells[o].aiSolution&&this.setCellSolution(e.cells[o],0),e.cells[l]&&null===e.cells[l].aiSolution&&this.setCellSolution(e.cells[l],0),t.solved=!0)})}findCompletedLines(e){let t=0,o=0;e.sections.forEach(e=>{t+=e.length}),e.cells.forEach(e=>{o+=1===e.aiSolution}),t===o&&e.cells.forEach(e=>{null===e.aiSolution&&this.setCellSolution(e,0)})}_reset(){const e=this,t=[],o=[];let l;for(e.isReset=!0,e.solutionLog=[],e.lines=[],this.log("Resetting variables","info"),e.puzzle.cells.forEach(e=>{e.aiSolution=null}),l=0;l<e.puzzle.width;l++)t.push(l);for(l=0;l<e.puzzle.height;l++)o.push(l);e.puzzle.rowHints.forEach((o,l)=>{const i=e.puzzle.getRowCells(l);if(i){let s=new n.a.PuzzleLine({type:"row",index:l,length:e.puzzle.width,cells:i});o.forEach((e,o)=>{s.sections.push({index:o,length:e,possibleStartIndexes:t,knownIndexes:[],solved:!1}),s.minimumSectionLength+=e+1}),s.minimumSectionLength--,e.lines.push(s)}}),e.puzzle.columnHints.forEach((t,l)=>{const i=new n.a.PuzzleLine({type:"column",index:l,length:this.puzzle.height,cells:this.puzzle.getColumnCells(l)});t.forEach((e,t)=>{i.sections.push({index:t,length:e,possibleStartIndexes:o,knownIndexes:[],solved:!1}),i.minimumSectionLength+=e+1}),i.minimumSectionLength--,e.lines.push(i)})}setCellSolution(e,t){null===e.aiSolution&&this.lines.forEach(o=>{const l="row"===o.type&&o.index===e.row,n="column"===o.type&&o.index===e.column;let i=0;(l||n)&&(o.cells.forEach(o=>{o.index===e.index?(o.aiSolution=t,i++):null!==o.aiSolution&&i++}),i===o.length&&(o.solved=!0))})}log(e,t){this.solutionLog.push({html:e,cssClass:t||"info"})}getTotalSolved(){let e=0;return this.puzzle.cells.forEach(t=>{e+=null!==t.aiSolution}),e}getProgress(){let e=0,t=0;return this.lines.forEach(o=>{e+=o.sections.length*("row"===o.type?this.puzzle.width:this.puzzle.height),o.sections.forEach(e=>{t+=e.possibleStartIndexes.length})}),e-t}}},function(e,t,o){"use strict";o.r(t);var l=o(0),n=o.n(l);n.a.Gui=class{constructor(e){const t=document.querySelector("head"),o=document.createElement("link");this.boardSizes=[{name:"Tiny",handle:"tiny",size:1},{name:"Small",handle:"small",size:2},{name:"Medium",handle:"medium",size:3},{name:"Large",handle:"large",size:4}],this.boardSize=this.boardSizes[2],this.theme=e||"default",this.themePath=this._resolveThemePath()+"/"+this.theme,this.themeStylesheetPath=this.themePath+"/styles.css",o.rel="stylesheet",o.type="text/css",o.href=this.themeStylesheetPath,t.prepend(o),this.themeTemplatesPath=this.themePath+"/templates",this.templates=[new n.a.GuiTemplate("gameControls",this.themeTemplatesPath+"/controls-game.html"),new n.a.GuiTemplate("generateControls",this.themeTemplatesPath+"/controls-generate.html"),new n.a.GuiTemplate("console",this.themeTemplatesPath+"/console.html"),new n.a.GuiTemplate("previewGrid",this.themeTemplatesPath+"/preview-grid.html"),new n.a.GuiTemplate("puzzleGrid",this.themeTemplatesPath+"/puzzle-grid.html")],this.templates.forEach(e=>{e.load()})}draw(e){this.drawPuzzle(e),this.drawGameControls(),this.drawGenerateControls(),this.drawConsole()}drawPuzzle(e){const t=this,o=t._getTemplate("puzzleGrid");if(t.puzzle=e,t.gridContainer=document.querySelector("[data-nonogram-puzzle-grid]"),!t.gridContainer)return;const l=()=>{const e=t.gridContainer,l=o.getNode(),n=l.querySelector("[data-nonogram-puzzle-grid-table-thead-th]"),i=l.querySelector("[data-nonogram-puzzle-grid-table-row]"),s={tl:0,tr:t.puzzle.width-1,bl:t.puzzle.width*t.puzzle.height-t.puzzle.width,br:t.puzzle.width*t.puzzle.height-1};t.puzzle.columnHints.forEach((e,t)=>{const o=document.importNode(n.content,!0).querySelector("th"),l=o.querySelector(".fill");o.setAttribute("data-column",t.toString()),o.classList.add("hint","top"),e.forEach(e=>{let t=document.createElement("span");t.textContent=e,l.appendChild(t)}),n.parentNode.insertBefore(o,n)}),t.puzzle.grid.forEach((e,o)=>{const l=t.puzzle.getRowCells(o),n=document.importNode(i.content,!0).querySelector("tr"),r=n.querySelector("[data-nonogram-puzzle-grid-table-cell]"),a=n.querySelector("[data-row-hints] .fill");n.setAttribute("data-row",o.toString()),t.puzzle.rowHints[o].forEach(e=>{let t=document.createElement("span");t.textContent=e,a.appendChild(t)}),l.forEach(e=>{const t=document.importNode(r.content,!0).querySelector("td");t.setAttribute("data-index",e.index),t.setAttribute("data-column",e.column),t.setAttribute("data-row",e.row),t.classList.add("puzzle-cell","flippable"),Object.keys(s).forEach(o=>{e.index===s[o]&&t.classList.add(o)}),n.appendChild(t)}),i.parentNode.appendChild(n)}),e.innerHtml=e.textContent="",e.appendChild(l),document.querySelector("[data-nonogram-puzzle-grid-table]").classList.add(t.boardSize.handle),t._resizeBoardForAvailableScreen(),t._makePuzzlePlayable(),t.drawPreview("userSolution")};o.isLoaded?l():o.loaded(l)}drawGameControls(){const e=this,t=e._getTemplate("gameControls"),o=()=>{const o=document.querySelector("[data-nonogram-game-controls]"),l=t.getNode();let n;o&&(o.innerHtml=o.textContent="",o.appendChild(l),(n=document.querySelector("#nonogram-puzzle-fill-mode")).addEventListener("change",()=>{const t=document.querySelector('[for="nonogram-puzzle-fill-mode"]'),o=t.querySelector(".active"),l=t.querySelector(".inactive");o.classList.remove("active"),o.classList.add("inactive"),l.classList.remove("inactive"),l.classList.add("active"),n.checked?(t.classList.add("on"),e.playerClickMode=0):(t.classList.remove("on"),e.playerClickMode=1)}),window.addEventListener("keyup",e=>{e.key&&"x"===e.key&&n.dispatchEvent(new MouseEvent("click"))}))};t.isLoaded?o():t.loaded(o)}drawGenerateControls(){const e=this,t=e._getTemplate("generateControls"),o=()=>{const o=document.querySelector("[data-nonogram-generate-controls]"),l=t.getNode(),i=l.querySelector("[data-nonogram-generate-width]"),s=l.querySelector("[data-nonogram-generate-height]"),r=l.querySelector("[data-nonogram-generate-width-options]"),a=l.querySelector("[data-nonogram-generate-height-options]"),u=l.querySelector("[data-nonogram-choose-predefined]"),c=l.querySelector("[data-nonogram-board-size]"),d=l.querySelector("[data-nonogram-board-size-options]");let h,g,p,m,z,f,S,v,w,y,C,b,E,x;if(o){for(h=5;h<=30;h++)g=document.importNode(r.content,!0),p=document.importNode(a.content,!0),(m=g.querySelector("option")).textContent=m.value=h,(z=p.querySelector("option")).textContent=z.value=h,e.puzzle.width===h&&m.setAttribute("selected","selected"),e.puzzle.height===h&&z.setAttribute("selected","selected"),i.appendChild(m),s.appendChild(z);Object.keys(n.a.PuzzleLibrary).forEach(t=>{f=document.importNode(r.content,!0),(S=f.querySelector("option")).textContent=S.value=t,t===e.selectedExample&&S.setAttribute("selected","selected"),u.appendChild(S)}),e.boardSizes.forEach(t=>{y=document.importNode(d.content,!0),(C=y.querySelector("option")).value=t.handle,C.textContent=t.name,t.handle===e.boardSize.handle&&C.setAttribute("selected","selected"),c.appendChild(C)}),o.innerHtml=o.textContent="",o.appendChild(l),x=document.querySelector("[data-nonogram-generate-button]"),v=document.querySelector("[data-nonogram-choose-predefined]"),w=document.querySelector("[data-nonogram-board-size]"),b=document.querySelector("[data-nonogram-game-reset]"),E=document.querySelector("[data-nonogram-game-solve]"),x.addEventListener("click",()=>{const t=document.querySelector("[data-nonogram-generate-width]"),o=document.querySelector("[data-nonogram-generate-height]"),l=t.value,i=o.value,s=(new n.a.Creator).createRandom(l,i,null);e.selectedExample=null,e.draw(s),e._resizeBoardForAvailableScreen()}),v.addEventListener("change",()=>{const t=new n.a.Creator;let o,l;""!==v.value&&(Object.keys(n.a.PuzzleLibrary).forEach(i=>{v.value===i&&(o=n.a.PuzzleLibrary[i],e.selectedExample=i,o.solutionGrid?l=t.createFromGrid(o.solutionGrid):o.hints&&(l=t.createFromHints(o.hints)))}),l&&(e.draw(l),e._resizeBoardForAvailableScreen()))}),w.addEventListener("change",()=>{e.boardSizes.forEach(t=>{t.handle===w.value&&e._changeBoardSize(t)})}),b.addEventListener("click",()=>{e._resetPuzzle()}),E.addEventListener("click",()=>{e.drawSolution(),e.drawPreview("solution"),e._showPuzzleSolved()})}};t.isLoaded?o():t.loaded(o)}drawConsole(){const e=this,t=e._getTemplate("console"),o=()=>{e.updateConsole()};t.isLoaded?o():t.loaded(o)}updateConsole(){const e=this,t=e._getTemplate("console"),o=document.querySelector("[data-nonogram-console]"),l=t.getNode(),i=l.querySelector("[data-nonogram-console-output]"),s=l.querySelector("[data-nonogram-console-line]");o&&(e.puzzle.creator instanceof n.a.Creator&&e.puzzle.creator.log.forEach(e=>{const t=document.importNode(s.content,!0).querySelector("code");t.textContent=e.toString(),i.appendChild(t)}),o.innerHtml=o.textContent="",o.appendChild(l))}drawPreview(e){const t=this,o=t._getTemplate("previewGrid"),l=()=>{const l=document.querySelector("[data-nonogram-preview-grid]"),n=o.getNode();l.innerHtml=l.textContent="",l.appendChild(n.querySelector("[data-nonogram-preview]"));const i=document.querySelector("[data-nonogram-preview-canvas]"),s=i.getContext("2d"),r=i.parentElement.parentElement.parentElement,a=r.offsetWidth,u=r.offsetHeight,c=a/u,d=t.puzzle.width/t.puzzle.height;let h;h=c>d?Math.floor(u/t.puzzle.height):Math.floor(a/t.puzzle.width),i.width=h*t.puzzle.width,i.height=h*t.puzzle.height,t.puzzle.cells.forEach(t=>{1===t[e]&&s.fillRect(t.column*h,t.row*h,h,h)})};o.isLoaded?l():o.loaded(l)}drawSolution(){const e=this;e.gridContainer.querySelectorAll("td.filled").forEach(e=>{e.classList.remove("filled","solution-positive","solution-negative","user-positive","user-negative","flipped")}),e.puzzle.cells.forEach(t=>{const o=e.gridContainer.querySelector('td[data-index="'+t.index+'"]');t.userSolution=t.solution,o.classList.add("user-solved"),1===t.solution?o.classList.add("solution-positive","user-positive","flipped"):o.classList.add("solution-negative","user-negative")})}_changeBoardSize(e){const t=document.querySelector("[data-nonogram-puzzle-grid-table]"),o=document.querySelector("[data-nonogram-board-size");t.classList.remove("tiny","small","medium","large"),t.classList.add(e.handle),o.value=e.handle,this.boardSize=e,this.drawPreview()}_resizeBoardForAvailableScreen(){const e=this,t=e.gridContainer.querySelector(".nonogram-puzzle-grid"),o=e.gridContainer.clientWidth,l=e.boardSizes.sort((e,t)=>e.size>t.size?-1:1);let n;if(t.clientWidth>o)for(n=0;n<l.length&&(l[n].size<e.boardSize.size&&e._changeBoardSize(l[n]),!(t.clientWidth<=o));n++);}_makePuzzlePlayable(){const e=this,t=e.gridContainer.querySelector(".nonogram-puzzle-grid"),o=e.gridContainer.querySelectorAll(".nonogram-puzzle-grid td.puzzle-cell"),l=e.gridContainer.querySelectorAll(".nonogram-puzzle-grid td");e.playerClickMode=1,o.forEach(o=>{o.classList.add("playable"),o.addEventListener("mouseenter",e=>{const t=e.currentTarget,o=t.getAttribute("data-row"),n=t.getAttribute("data-column");l.forEach(e=>{e.getAttribute("data-row")===o||e.getAttribute("data-column")===n?e.classList.add("row-column-highlight"):e.classList.remove("row-column-highlight")})}),o.addEventListener("click",o=>{const l=o.currentTarget,n=l.getAttribute("data-index"),i=e.puzzle.getCellByIndex(n),s=document.querySelector("[data-nonogram-puzzle-grid-solved]");o.preventDefault(),i.userSolution=i.userSolution===e.playerClickMode?null:e.playerClickMode,t.classList.remove("solved"),l.classList.remove("user-solved","user-positive","user-negative","solution-positive","solution-negative"),1===i.userSolution?l.classList.add("user-solved","user-positive"):0===i.userSolution&&l.classList.add("user-solved","user-negative"),l.classList.toggle("flipped"),e.drawPreview("userSolution"),e.puzzle.checkUserSolution()?e._showPuzzleSolved():s.textContent=""})}),t.addEventListener("mouseleave",()=>{l.forEach(e=>{e.classList.remove("row-column-highlight")})})}_resetPuzzle(){const e=this.gridContainer.querySelectorAll(".nonogram-puzzle-grid td.puzzle-cell"),t=this.gridContainer.querySelector(".nonogram-puzzle-grid"),o=document.querySelector("[data-nonogram-puzzle-grid-solved]");t.classList.remove("solved"),o.textContent="",this.puzzle.cells.forEach(e=>{e.userSolution=null}),e.forEach(e=>{e.classList.remove("user-solved","user-positive","user-negative","solution-positive","solution-negative")}),this.gridContainer.querySelector("[data-nonogram-preview-grid]").innerHTML="",this.drawPreview("userSolution")}_showPuzzleSolved(){const e=this.gridContainer.querySelector(".nonogram-puzzle-grid"),t=document.querySelector("[data-nonogram-puzzle-grid-solved]");e.classList.add("solved"),t.textContent="Solved!"}_getTemplate(e){const t=this.templates.find(t=>t.name===e);if(!t instanceof n.a.GuiTemplate)throw'"'+e+'" template not found.';return t}_resolveThemePath(){let e="";return document.querySelectorAll("script").forEach(t=>{try{const o=new URL(t.src),l=o.pathname.split("/").pop();"nonogram.min.js"===l&&(e=o.href.replace(l,"")+"themes")}catch(e){}}),e}}},function(e,t,o){"use strict";o.r(t);var l=o(0);o.n(l).a.GuiTemplate=class{constructor(e,t){this.name=e,this.path=t,this.html="",this.onLoadedCallbacks=[],this.isLoaded=!1}loaded(e){this.onLoadedCallbacks.push(e)}fireOnLoaded(){this.onLoadedCallbacks.forEach(e=>{e()})}load(){const e=this;fetch(e.path).then(t=>{if(!t.ok)throw'loading failed for "'+e.path+'"';t.text().then(t=>{e.html=t,e.isLoaded=!0,e.fireOnLoaded()})})}getNode(){const e=document.createElement("div");return e.innerHTML=this.html,e}}},function(e,t,o){"use strict";o.r(t);var l=o(0);o.n(l).a.PuzzleLibrary={"Small Example 1":{width:8,height:8,solutionGrid:[[0,0,0,0,1,1,1,0],[0,0,0,1,1,1,1,1],[0,0,0,1,1,1,1,1],[1,1,0,0,1,1,1,0],[0,1,0,1,1,1,1,1],[1,1,0,1,0,0,0,1],[1,1,0,1,1,1,1,1],[1,0,0,0,1,1,1,0]]},"Small Example 2":{width:8,height:8,hints:{row:[[3],[5],[5],[2,3],[1,5],[2,1,1],[2,5],[1,3]],column:[[1,3],[4],[],[2,3],[5,2],[5,2],[5,2],[2,3]]}},"Small Example 3":{width:10,height:10,hints:{column:[[3],[1,1],[1],[6],[8],[2,1],[4,1],[10],[3,1],[3]],row:[[4],[5],[2,3],[2,3],[2,1],[2,1],[2,1],[10],[1,1,1],[2,1,1]]}},"Medium Example 1":{width:16,height:18,hints:{column:[[5],[4,3,3],[7,6,2],[4,3,4,1],[3,2,4,1,2],[2,6,4],[3,3,1,1],[4,6,4],[6,4,1,1],[4,3,4,1],[7,6,2],[4,3,3],[5],[3],[5,3,3],[2,4,1,2]],row:[[5],[9],[3,5],[3,5,1],[4,4,2],[2,1,1,2,1],[2,2,1],[2,3,2,1],[7,2],[9,1],[2,2,2,2,2],[3,2,2,3,2],[4,1,1,6],[1,2,2,2],[16],[2,1,1,1,1,2,1],[2,2,2,2,2],[9,1]]}},"Medium Example 2":{width:15,height:15,hints:{column:[[4],[3,1],[2,3],[1,2,2],[1,2,1],[1,1,1,1],[4,3,3],[2,2,4,3],[1,2,5,1],[1,2,4,1],[1,2,5,1],[2,2,4,3],[9,3],[5,1,1],[6,1]],row:[[4,5],[3,2,2],[2,1,1],[1,4,3],[2,9],[2,8],[2,3],[12],[1,7,1],[9],[5],[1,1],[2,2],[3,3],[1,7,1]]}},"Large Example 1":{width:30,height:30,hints:{column:[[19,9],[13,1,2,1,5],[11,4,1,1,2,3],[10,6,1,4,1,1],[9,7,1,1,3,2],[3,4,11,1,6],[2,1,2,3,3,3,7],[2,2,1,2,4,3,8],[3,2,2,1,2,6,7],[1,3,3,4,1,4,4,1],[5,4,2,5,2,2],[1,3,11,1,2,4],[3,2,14,5],[2,2,1,14,7],[1,2,2,2,10,2],[2,1,3,2,6,3,3],[5,6,6,2,2,4],[6,4,4,3,3,3],[6,3,2,1,1,3,5,2],[6,1,2,2,2,2,2,3],[7,1,9,2,4],[7,3,1,2,2,3],[8,2,5,4,3],[6,1,7,11],[5,1,3,2,12],[5,2,2,2,3,11],[4,5,4,3,10],[3,14,10],[3,3,5,2,9],[4,3,3,10]],row:[[10,19],[9,1,2,15],[6,1,1,1,14],[5,2,3,2,11,1],[6,7,11,1],[7,5,7,3],[8,4,3,4],[6,4,5,1,4,1],[5,8,6,2,1],[4,10,3,3,3,1],[3,3,5,2,4,2,2],[2,3,3,3,2,4,2,3],[2,3,1,1,5,2,1,6],[1,4,3,4,2,2,2,4],[1,4,3,4,5,3,3],[1,5,5,2,1,4,1,1],[1,15,3,2,3,1],[2,4,7,2,2,3,1],[1,4,4,7,2,1,3],[1,2,3,4,3,3,1],[1,1,3,5,2,6,1],[1,1,1,4,4,9],[2,3,1,1,1,9],[1,2,4,1,1,6,8],[1,10,1,7,7],[2,8,2,1,2,1,7],[3,6,3,1,1,1,7],[4,4,4,3,11],[3,5,20],[2,7,19]]}}}},function(e,t,o){"use strict";o.r(t);var l=o(0),n=o.n(l);t.default=n.a}]).default});